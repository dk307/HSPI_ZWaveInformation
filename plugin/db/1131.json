{"approval_requested":0,"approved":1,"beaming":"1","database_id":1131,"db_version":3,"deleted":0,"description":"SmartCode 10 Touchpad Electronic Deadbolt","device_ref":"0006:0440","exclusion":"<p>Press button \u201cA\u201d on the lock one time to exclude it in your system.<\/p>","first_approval_time":"0000-00-00 00:00:00","frequently_listening":"1","inclusion":"<p>Press button \u201cA\u201d on the lock one time to include it in your system.<\/p>","label":"GED1800","last_approval_time":"2019-12-15 07:23:51","listening":"0","overview":"<ul><li>Dramatically reduced interior size and sleek metal design.<\/li> <li>Featuring SmartKey<sup>\u00ae<\/sup> re-key technology; re-key the lock yourself in seconds in 3 easy steps.<\/li> <li>Deadbolt operated by electronic keypad or key; backlit for increased visibility at night.<\/li> <li>Keypad stays lit for 30 seconds after inactivity.<\/li> <li>Customized automatic door locking after 30 seconds for peace of mind.<\/li> <li>One touch motorized locking. Lock your door with a single touch. No additional turning\/twisting needed.<\/li> <li>Features 30 user access codes and 1 master code option.<\/li> <li>ANSI\/BHMA grade 2 certified\/20 minute fire rating - UL certified.<\/li> <li>Fits most standard residential door preparations - installs in minutes with just a screw driver.<\/li> <li>Lifetime mechanical and finish warranty, One year electronics warranty.<\/li> <li>4 AA, purchased separately.<\/li> <li>Full 128-bit encryption security.<\/li> <\/ul>","protocol_version":"6.510","routing":"1","usage":"<p>Like most Z-Wave locks, the lock doesn't update its status (locked or unlocked) but signals it through alarms instead.\u00a0 Here is some sample output from the alarm_raw channel:<\/p> <p>Locked by Controller:<\/p> <p>{\"notification\":\"ACCESS_CONTROL__REMOTE_LOCK\",\"level\":\"1\",\"type\":\"ACCESS_CONTROL\",\"event\":\"3\",\"status\":\"255\"}<\/p> <p><br \/>Unlocked by Controller:<\/p> <p>{\"notification\":\"ACCESS_CONTROL__REMOTE_UNLOCK\",\"level\":\"1\",\"type\":\"ACCESS_CONTROL\",\"event\":\"4\",\"status\":\"255\"}<\/p> <p><br \/>Locked by Hand (key or knob):<\/p> <p>{\"notification\":\"ACCESS_CONTROL__MANUAL_LOCK\",\"level\":\"1\",\"type\":\"ACCESS_CONTROL\",\"event\":\"1\",\"status\":\"255\"}<\/p> <p><br \/>Unlocked by Hand (key or knob):<\/p> <p>{\"notification\":\"ACCESS_CONTROL__MANUAL_UNLOCK\",\"level\":\"1\",\"type\":\"ACCESS_CONTROL\",\"event\":\"2\",\"status\":\"255\"}<\/p> <p><br \/>Locked by Keypad:<\/p> <p>{\"notification\":\"ACCESS_CONTROL__KEYPAD_LOCK\",\"level\":\"0\",\"type\":\"ACCESS_CONTROL\",\"event\":\"5\",\"status\":\"255\"}<\/p> <p><br \/>Unlocked by Keypad (Code #2):<\/p> <p>{\"notification\":\"ACCESS_CONTROL__KEYPAD_UNLOCK\",\"code\":\"2\",\"level\":\"2\",\"type\":\"ACCESS_CONTROL\",\"event\":\"6\",\"parameter-1\":\"2\",\"status\":\"255\"}<\/p> <p><br \/>When unlocked by keypad, code, type, and parameter-1 all indicate the code number (2 in the above example)<\/p> <p>Sample rule in Openhab to update the lock status, with Door_Lock linked to the lock's lock_door channel, and Door_Lock_Alarm linked to its alarm_raw channel.\u00a0 Make sure you have the JSONPath Transformation installed under Paper UI - Add-ons - Transformations:<\/p> <p>rule \"Door lock status updates\"<br \/>when<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Item Door_Lock_Alarm changed<br \/>then<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switch(transform(\"JSONPATH\", \"$.event\", Door_Lock_Alarm.state.toString)) {<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case \"1\", case \"3\", case \"5\" : Door_Lock.postUpdate(ON)<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case \"2\", case \"4\" : Door_Lock.postUpdate(OFF)<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case \"6\" : {<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 var userName = \"\"<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switch(transform(\"JSONPATH\", \"$.code\", Door_Lock_Alarm.state.toString)) {<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case \"1\": userName = \"Bill\"<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case \"2\": userName = \"Ted\"<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 default: userName = \"Unknown\"<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mailActions.sendMail(\"bill@example.com\", \"Door lock opened by code\", \"Door lock opened by \" + userName)<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Door_Lock.postUpdate(OFF)<br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <br \/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<br \/>end<\/p>","uuid":"ged1800","version_max":"255.255","version_min":"0.000","wakeup":"<p>Even though the lock is sleeping, all buttons are active and can be used to initiate any lock activity.\u00a0 For the RF side, it will wake up every 1 second to check if there are any requests from your smart home controller.<\/p>","manufacturer":{"id":63,"label":"Black & Decker","reference":144,"uuid":"kwikset","url":"http:\/\/www.kwikset.com\/"},"category":{"id":13,"label":"Lock","category":"Lock","description":"Devices whose primary pupose is locking something"},"endpoints":[{"id":1768,"number":0,"label":"Endpoint 0","basic_class":{"id":4,"name":"BASIC_TYPE_ROUTING_SLAVE"},"generic_class":{"id":64,"name":"GENERIC_TYPE_ENTRY_CONTROL"},"specific_class":{"id":3,"name":"SPECIFIC_TYPE_SECURE_KEYPAD_DOOR_LOCK"},"commandclass":[{"cmdclass_id":17151,"commandclass_name":"COMMAND_CLASS_NO_OPERATION","basic":"0","version":1,"nif":"0","secure":"0","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17150,"commandclass_name":"COMMAND_CLASS_BASIC","basic":"0","version":0,"nif":"0","secure":"0","nonsecure":"1","config":"","command_group":"APP","channels":[]},{"cmdclass_id":17175,"commandclass_name":"COMMAND_CLASS_DOOR_LOCK_LOGGING","basic":"0","version":0,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"APP","channels":[]},{"cmdclass_id":17177,"commandclass_name":"COMMAND_CLASS_SCHEDULE_ENTRY_LOCK","basic":"0","version":2,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"APP","channels":[]},{"cmdclass_id":17171,"commandclass_name":"COMMAND_CLASS_ASSOCIATION_GRP_INFO","basic":"0","version":0,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17155,"commandclass_name":"COMMAND_CLASS_DEVICE_RESET_LOCALLY","basic":"0","version":0,"nif":"","secure":"","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17153,"commandclass_name":"COMMAND_CLASS_ZWAVEPLUS_INFO","basic":"0","version":2,"nif":"0","secure":"0","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17176,"commandclass_name":"COMMAND_CLASS_DOOR_LOCK","basic":"0","version":2,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"APP","channels":[{"name":"lock_door","config":"","label":"Door Lock","overview":"","deprecated":"0000-00-00","id":5040,"options":[]}]},{"cmdclass_id":17179,"commandclass_name":"COMMAND_CLASS_USER_CODE","basic":"0","version":0,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"APP","channels":[]},{"cmdclass_id":17170,"commandclass_name":"COMMAND_CLASS_CONFIGURATION","basic":"0","version":0,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"APP","channels":[]},{"cmdclass_id":17885,"commandclass_name":"COMMAND_CLASS_ALARM","basic":"0","version":4,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"APP","channels":[{"name":"alarm_raw","config":"","label":"Alarm Raw","overview":"","deprecated":"0000-00-00","id":5065,"options":[]}]},{"cmdclass_id":17152,"commandclass_name":"COMMAND_CLASS_MANUFACTURER_SPECIFIC","basic":"0","version":2,"nif":"0","secure":"0","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17149,"commandclass_name":"COMMAND_CLASS_POWERLEVEL","basic":"0","version":0,"nif":"","secure":"","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17148,"commandclass_name":"COMMAND_CLASS_FIRMWARE_UPDATE_MD","basic":"0","version":3,"nif":"0","secure":"0","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17174,"commandclass_name":"COMMAND_CLASS_BATTERY","basic":"0","version":0,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17173,"commandclass_name":"COMMAND_CLASS_ASSOCIATION","basic":"0","version":2,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17180,"commandclass_name":"COMMAND_CLASS_VERSION","basic":"0","version":2,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17178,"commandclass_name":"COMMAND_CLASS_TIME_PARAMETERS","basic":"0","version":0,"nif":"0","secure":"1","nonsecure":"1","config":"","command_group":"MGMT","channels":[]},{"cmdclass_id":17154,"commandclass_name":"COMMAND_CLASS_SECURITY","basic":"0","version":0,"nif":"","secure":"","nonsecure":"1","config":"","command_group":"ENCAP","channels":[]}]}],"parameters":[{"param_id":31,"label":"Buzzer","description":"Internal Buzzer","units":"","overview":"<p>Internal buzzer enabled.\u00a0 Factory default is ON.\u00a0 It is recommended that the buzzer is left ON during programming.<\/p>","size":1,"bitmask":0,"default":1,"minimum":0,"maximum":1,"read_only":"1","write_only":"0","reinclude":0,"limit_options":"0","advanced":0,"confirmation":0,"id":7555,"options":[{"value":0,"label":"OFF","id":10263},{"value":1,"label":"ON","id":10264}]},{"param_id":31,"label":"Auto Lock","description":"Automatically re-locks door 30 seconds after unlocking.","units":"","overview":"<p>Lock automatically re-locks door 30 seconds after unlocking. OFF position is factory\u00a0default. If this switch is turned on, it will be disabled if all codes are deleted from the lock.<\/p>","size":1,"bitmask":16777216,"default":0,"minimum":0,"maximum":1,"read_only":"1","write_only":"0","reinclude":0,"limit_options":"0","advanced":0,"confirmation":0,"id":7554,"options":[{"value":0,"label":"OFF","id":10261},{"value":1,"label":"ON","id":10262}]},{"param_id":31,"label":"Status LED","description":"Door lock status LED blinks every 6 seconds","units":"","overview":"<p>Door lock status LED blinks every 6 seconds.\u00a0 Factory default is ON.<\/p>","size":1,"bitmask":268435456,"default":1,"minimum":0,"maximum":1,"read_only":"1","write_only":"0","reinclude":0,"limit_options":"0","advanced":0,"confirmation":0,"id":7553,"options":[{"value":0,"label":"OFF","id":10259},{"value":1,"label":"ON","id":10260}]},{"param_id":33,"label":"SKU (1st half)","description":"First 4 byes of SKU","units":"","overview":"<p>The configuration parameters 33 and 34 are used to set and get the SKU part numbers. The SKU is made up of 8 bytes. Each parameter consists of four bytes of data. Parameter 33 contains the first four most significant bytes of the SKU, while parameter 34 contains the four least significant bytes of the SKU.<\/p> <p>When setting the SKU, it must be done in two set commands, one for each parameter. The order of programming the SKU does not matter. Setting parameter 33 will program the first four bytes of the SKU. Setting parameter 34 will program the last 4 bytes of the SKU. Most printable values are accepted for the set command.<\/p> <p>When getting the SKU, it must be done in two get commands, one for each parameter. The order of getting the SKU does not matter. Getting parameter 33 will retrieve the first four bytes of the SKU. Getting parameter 34 will retrieve the last 4 bytes of the SKU.<\/p>","size":4,"bitmask":0,"default":32,"minimum":32,"maximum":126,"read_only":"0","write_only":"0","reinclude":0,"limit_options":"1","advanced":1,"confirmation":0,"id":7556,"options":[]},{"param_id":34,"label":"SKU (2nd half)","description":"Last 4 bytes of SKU","units":"","overview":"<p>The configuration parameters 33 and 34 are used to set and get the SKU part numbers. The SKU is made up of 8 bytes. Each parameter consists of four bytes of data. Parameter 33 contains the first four most significant bytes of the SKU, while parameter 34 contains the four least significant bytes of the SKU.<\/p> <p>When setting the SKU, it must be done in two set commands, one for each parameter. The order of programming the SKU does not matter. Setting parameter 33 will program the first four bytes of the SKU. Setting parameter 34 will program the last 4 bytes of the SKU. Most printable values are accepted for the set command.<\/p> <p>When getting the SKU, it must be done in two get commands, one for each parameter. The order of getting the SKU does not matter. Getting parameter 33 will retrieve the first four bytes of the SKU. Getting parameter 34 will retrieve the last 4 bytes of the SKU.<\/p>","size":4,"bitmask":0,"default":32,"minimum":32,"maximum":126,"read_only":"0","write_only":"0","reinclude":0,"limit_options":"1","advanced":1,"confirmation":0,"id":7557,"options":[]},{"param_id":40,"label":"Factory Default","description":"Reset to factory default settings","units":"","overview":"<p>The configuration parameter 40 is a one byte field, used to set the lock to its default setting, known as a factory reset command.<\/p> <p>Reading this parameter will always return a value of 0.<\/p> <p>Writing a value of 1 to this parameter will cause both the lock and Z-Wave card to reset back to their default settings and will remove itself from the network. All network information, including associations will be cleared.<\/p>","size":1,"bitmask":0,"default":0,"minimum":0,"maximum":1,"read_only":"0","write_only":"1","reinclude":0,"limit_options":"0","advanced":1,"confirmation":1,"id":7558,"options":[{"value":0,"label":"Don't Reset","id":10265},{"value":1,"label":"Reset to Factory Defaults","id":10266}]}],"associations":[{"group_id":1,"label":"Lifeline","max_nodes":1,"controller":"1","description":"","overview":"<p>Per Z-Wave Plus requirements, group 1 is assigned to the Lifeline group and can only support 1 node.<\/p>","id":2551},{"group_id":2,"label":"Doorlock Notify Report","max_nodes":5,"controller":"0","description":"","overview":"<p>Association group 2 is identified as the \u201cDoorlock notify report\u201d group.\u00a0 It allows at most 5 other nodes to be associated with the lock and will provide all Notification Reports, via the Command Class Notification, generated by the lock.<\/p>","id":2552}],"documents":[{"id":2589,"file":"5066078.pdf","label":"Installation Manual"},{"id":2590,"file":"Smartcode-10-RAS-ZWAVE-traditional-electronic-lock-featuring-smartkey-in-satin-nickel.jpg","label":"Product Image"},{"id":2593,"file":"Install-Guide-GED1800-04112017.pdf","label":"Technical Manual"}]}