name: 'Unit Tests'

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  build-cache-test-win:   
    name: Build, cache and test on Windows
    runs-on: windows-latest
    
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1

      - name: Cache Nuget Packages
        uses: actions/cache@v2
        with:
         path: ~/.nuget/packages
         key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
         restore-keys: |
              ${{ runner.os }}-nuget-
 
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Restore Nuget Packages
        run: nuget restore HSPI_ZWaveParameters.sln

      - name: Build Solution
        run: msbuild.exe HSPI_ZWaveParameters.sln /p:platform="Any CPU" /p:configuration="Debug"

      - name: Cache unit tests binaries
        id: unit-test-binaries
        uses: actions/cache@v2
        with:
         path: .\tests\bin\Debug\*
         key: ${{ github.sha }}
             
      - name: Run Unit Tests
        run: vstest.console.exe .\tests\bin\Debug\HSPI_ZWaveParametersTest.dll /logger:trx

        # Using the trx-parser action
      - name: Parse Trx files
        uses: NasAmin/trx-parser@v0.2.0
        id: trx-parser
        with:
          TRX_PATH: ${{ github.workspace }}/TestResults #This should be the path to your TRX files
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

  cache-use-build-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    needs: [build-cache-test-win]    

    steps:
      - name: Check Cache Exists
        if: steps.unit-test-binaries.outputs.cache-hit != 'true'
        run: echo "No cache found"

      - name: Use cache unit tests binaries
        uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: ls -l
      